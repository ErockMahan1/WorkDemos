<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0520.1026                               -->
<workbook original-version='18.1' source-build='2025.1.2 (20251.25.0520.1026)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='ACTSATScores' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SAT_OLD_long (date)' inline='true' name='federated.1jm96je00t8gf518ymjl60gt6di6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SAT_OLD_long' name='textscan.0g765no0csffx317dznbp1uu5bog'>
            <connection class='textscan' directory='C:/Users/emcdo/OneDrive/Documents/GitHub/SpringBoardProjects/Capstone3' filename='SAT_OLD_long.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0g765no0csffx317dznbp1uu5bog' name='SAT_OLD_long.csv' table='[SAT_OLD_long#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='string' name='Subject' ordinal='2' />
            <column datatype='integer' name='Score' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SAT_OLD_long.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SAT_OLD_long.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[SAT_OLD_long.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subject</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Subject]</local-name>
            <parent-name>[SAT_OLD_long.csv]</parent-name>
            <remote-alias>Subject</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[SAT_OLD_long.csv]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='SumACTScores' datatype='real' name='[Calculation_1605814762569412615]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Score 1])' />
      </column>
      <column caption='Score (1)' datatype='real' name='[Score 1]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column caption='SAT_OLD_long.csv' datatype='table' name='[__tableau_internal_object_id__].[SAT_OLD_long.csv_B20BA23B050B42C58457BCB2B0FAD1C1]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/emcdo/AppData/Local/Temp/TableauTemp/#TableauTemp_1aaqfc7071fnk911ll4on03xek6g.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/13/2025 05:32:50 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>SAT_OLD_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[SAT_OLD_long.csv_B20BA23B050B42C58457BCB2B0FAD1C1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>SAT_OLD_long.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <object-id>[SAT_OLD_long.csv_B20BA23B050B42C58457BCB2B0FAD1C1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Subject</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Subject]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Subject</remote-alias>
              <ordinal>2</ordinal>
              <family>SAT_OLD_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[SAT_OLD_long.csv_B20BA23B050B42C58457BCB2B0FAD1C1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Score</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Score</remote-alias>
              <ordinal>3</ordinal>
              <family>SAT_OLD_long.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>341</approx-count>
              <contains-null>true</contains-null>
              <object-id>[SAT_OLD_long.csv_B20BA23B050B42C58457BCB2B0FAD1C1]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='SAT_OLD_long.csv' id='SAT_OLD_long.csv_B20BA23B050B42C58457BCB2B0FAD1C1'>
            <properties context=''>
              <relation connection='textscan.0g765no0csffx317dznbp1uu5bog' name='SAT_OLD_long.csv' table='[SAT_OLD_long#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
                  <column datatype='string' name='Subject' ordinal='2' />
                  <column datatype='integer' name='Score' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Digest 2014 Table 226.40 (SATAllYears)' inline='true' name='federated.017ljs81ehhol410vgsg016spc0u' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SATAllYears' name='excel-direct.07s4a061r5ozpl1epxpb50clh0tk'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/emcdo/OneDrive/Documents/GitHub/SpringBoardProjects/Capstone3/SATAllYears.xls' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.07s4a061r5ozpl1epxpb50clh0tk' name='Digest 2014 Table 226.40' table='[&apos;Digest 2014 Table 226#40$&apos;]' type='table'>
          <columns gridOrigin='A1:S72:no:A1:S72:2' header='yes' lost='0' outcome='1' processed='955'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='1995-96 Critical reading' ordinal='1' />
            <column datatype='integer' name='1995-96 Mathe- matics' ordinal='2' />
            <column datatype='integer' name='2000-01 Critical reading' ordinal='3' />
            <column datatype='integer' name='2000-01 Mathe- matics' ordinal='4' />
            <column datatype='integer' name='2005-06 Critical reading' ordinal='5' />
            <column datatype='integer' name='2005-06 Mathe- matics' ordinal='6' />
            <column datatype='integer' name='2005-06 Writing\2_' ordinal='7' />
            <column datatype='integer' name='2010-11 Critical reading' ordinal='8' />
            <column datatype='integer' name='2010-11 Mathe- matics' ordinal='9' />
            <column datatype='integer' name='2010-11 Writing\2_' ordinal='10' />
            <column datatype='integer' name='2012-13 Critical reading' ordinal='11' />
            <column datatype='integer' name='2012-13 Mathe- matics' ordinal='12' />
            <column datatype='integer' name='2012-13 Writing\2_' ordinal='13' />
            <column datatype='integer' name='2013-14 Critical reading' ordinal='14' />
            <column datatype='integer' name='2013-14 Mathe- matics' ordinal='15' />
            <column datatype='integer' name='2013-14 Writing\2_' ordinal='16' />
            <column datatype='real' name='Percent of graduates taking SAT, 2012-13\1_' ordinal='17' />
            <column datatype='real' name='Percent of graduates taking SAT, 2013-14\1_' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:S72:no:A1:S72:2&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>955</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1995-96 Critical reading</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1995-96 Critical reading]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>1995-96 Critical reading</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1995-96 Mathe- matics</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1995-96 Mathe- matics]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>1995-96 Mathe- matics</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2000-01 Critical reading</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2000-01 Critical reading]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2000-01 Critical reading</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2000-01 Mathe- matics</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2000-01 Mathe- matics]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2000-01 Mathe- matics</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2005-06 Critical reading</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2005-06 Critical reading]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2005-06 Critical reading</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2005-06 Mathe- matics</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2005-06 Mathe- matics]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2005-06 Mathe- matics</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2005-06 Writing\2_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2005-06 Writing\2_]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2005-06 Writing\2_</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010-11 Critical reading</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2010-11 Critical reading]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2010-11 Critical reading</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010-11 Mathe- matics</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2010-11 Mathe- matics]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2010-11 Mathe- matics</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010-11 Writing\2_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2010-11 Writing\2_]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2010-11 Writing\2_</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012-13 Critical reading</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2012-13 Critical reading]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2012-13 Critical reading</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012-13 Mathe- matics</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2012-13 Mathe- matics]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2012-13 Mathe- matics</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012-13 Writing\2_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2012-13 Writing\2_]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2012-13 Writing\2_</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013-14 Critical reading</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2013-14 Critical reading]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2013-14 Critical reading</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013-14 Mathe- matics</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2013-14 Mathe- matics]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2013-14 Mathe- matics</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013-14 Writing\2_</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2013-14 Writing\2_]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>2013-14 Writing\2_</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent of graduates taking SAT, 2012-13\1_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent of graduates taking SAT, 2012-13\1_]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>Percent of graduates taking SAT, 2012-13\1_</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent of graduates taking SAT, 2013-14\1_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent of graduates taking SAT, 2013-14\1_]</local-name>
            <parent-name>[Digest 2014 Table 226.40]</parent-name>
            <remote-alias>Percent of graduates taking SAT, 2013-14\1_</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Digest 2014 Table 226.40' datatype='table' name='[__tableau_internal_object_id__].[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/emcdo/AppData/Local/Temp/TableauTemp/#TableauTemp_13jkwu81i7oa8b1f3493g1y4wo4t.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/13/2025 06:45:44 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1995-96 Critical reading</remote-name>
              <remote-type>20</remote-type>
              <local-name>[1995-96 Critical reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1995-96 Critical reading</remote-alias>
              <ordinal>1</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1995-96 Mathe- matics</remote-name>
              <remote-type>20</remote-type>
              <local-name>[1995-96 Mathe- matics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1995-96 Mathe- matics</remote-alias>
              <ordinal>2</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2000-01 Critical reading</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2000-01 Critical reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2000-01 Critical reading</remote-alias>
              <ordinal>3</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2000-01 Mathe- matics</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2000-01 Mathe- matics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2000-01 Mathe- matics</remote-alias>
              <ordinal>4</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2005-06 Critical reading</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2005-06 Critical reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2005-06 Critical reading</remote-alias>
              <ordinal>5</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2005-06 Mathe- matics</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2005-06 Mathe- matics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2005-06 Mathe- matics</remote-alias>
              <ordinal>6</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2005-06 Writing\2_</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2005-06 Writing\2_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2005-06 Writing\2_</remote-alias>
              <ordinal>7</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2010-11 Critical reading</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2010-11 Critical reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2010-11 Critical reading</remote-alias>
              <ordinal>8</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2010-11 Mathe- matics</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2010-11 Mathe- matics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2010-11 Mathe- matics</remote-alias>
              <ordinal>9</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2010-11 Writing\2_</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2010-11 Writing\2_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2010-11 Writing\2_</remote-alias>
              <ordinal>10</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2012-13 Critical reading</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2012-13 Critical reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2012-13 Critical reading</remote-alias>
              <ordinal>11</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2012-13 Mathe- matics</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2012-13 Mathe- matics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2012-13 Mathe- matics</remote-alias>
              <ordinal>12</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2012-13 Writing\2_</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2012-13 Writing\2_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2012-13 Writing\2_</remote-alias>
              <ordinal>13</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2013-14 Critical reading</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2013-14 Critical reading]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2013-14 Critical reading</remote-alias>
              <ordinal>14</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2013-14 Mathe- matics</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2013-14 Mathe- matics]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2013-14 Mathe- matics</remote-alias>
              <ordinal>15</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2013-14 Writing\2_</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2013-14 Writing\2_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2013-14 Writing\2_</remote-alias>
              <ordinal>16</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percent of graduates taking SAT, 2012-13\1_</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percent of graduates taking SAT, 2012-13\1_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percent of graduates taking SAT, 2012-13\1_</remote-alias>
              <ordinal>17</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percent of graduates taking SAT, 2013-14\1_</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percent of graduates taking SAT, 2013-14\1_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percent of graduates taking SAT, 2013-14\1_</remote-alias>
              <ordinal>18</ordinal>
              <family>Digest 2014 Table 226.40</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Digest 2014 Table 226.40' id='Digest 2014 Table 226.40_C9D9E644376F4406A03F10B563637A17'>
            <properties context=''>
              <relation connection='excel-direct.07s4a061r5ozpl1epxpb50clh0tk' name='Digest 2014 Table 226.40' table='[&apos;Digest 2014 Table 226#40$&apos;]' type='table'>
                <columns gridOrigin='A1:S72:no:A1:S72:2' header='yes' lost='0' outcome='1' processed='955'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='1995-96 Critical reading' ordinal='1' />
                  <column datatype='integer' name='1995-96 Mathe- matics' ordinal='2' />
                  <column datatype='integer' name='2000-01 Critical reading' ordinal='3' />
                  <column datatype='integer' name='2000-01 Mathe- matics' ordinal='4' />
                  <column datatype='integer' name='2005-06 Critical reading' ordinal='5' />
                  <column datatype='integer' name='2005-06 Mathe- matics' ordinal='6' />
                  <column datatype='integer' name='2005-06 Writing\2_' ordinal='7' />
                  <column datatype='integer' name='2010-11 Critical reading' ordinal='8' />
                  <column datatype='integer' name='2010-11 Mathe- matics' ordinal='9' />
                  <column datatype='integer' name='2010-11 Writing\2_' ordinal='10' />
                  <column datatype='integer' name='2012-13 Critical reading' ordinal='11' />
                  <column datatype='integer' name='2012-13 Mathe- matics' ordinal='12' />
                  <column datatype='integer' name='2012-13 Writing\2_' ordinal='13' />
                  <column datatype='integer' name='2013-14 Critical reading' ordinal='14' />
                  <column datatype='integer' name='2013-14 Mathe- matics' ordinal='15' />
                  <column datatype='integer' name='2013-14 Writing\2_' ordinal='16' />
                  <column datatype='real' name='Percent of graduates taking SAT, 2012-13\1_' ordinal='17' />
                  <column datatype='real' name='Percent of graduates taking SAT, 2013-14\1_' ordinal='18' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='SAT_OLD_long' inline='true' name='federated.0lyyte616wsfer14djb3k0nmdvw5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SAT_OLD_long' name='textscan.1rts8ux0wbyvzi12wxrrb11i5i01'>
            <connection class='textscan' directory='C:/Users/emcdo/OneDrive/Documents/GitHub/SpringBoardProjects/Capstone3' filename='SAT_OLD_long.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1rts8ux0wbyvzi12wxrrb11i5i01' name='SAT_OLD_long.csv' table='[SAT_OLD_long#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='Year' ordinal='1' />
            <column datatype='string' name='Subject' ordinal='2' />
            <column datatype='integer' name='Score' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SAT_OLD_long.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SAT_OLD_long.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[SAT_OLD_long.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subject</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Subject]</local-name>
            <parent-name>[SAT_OLD_long.csv]</parent-name>
            <remote-alias>Subject</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[SAT_OLD_long.csv]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='SAT_OLD_long.csv' datatype='table' name='[__tableau_internal_object_id__].[SAT_OLD_long.csv_A847F2504445497183CEB7D355885BD2]' role='measure' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/emcdo/AppData/Local/Temp/TableauTemp/#TableauTemp_09br8pa1s9aqn51dfwqqr0jgz17p.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/12/2025 05:10:35 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>SAT_OLD_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[SAT_OLD_long.csv_A847F2504445497183CEB7D355885BD2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>SAT_OLD_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[SAT_OLD_long.csv_A847F2504445497183CEB7D355885BD2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Subject</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Subject]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Subject</remote-alias>
              <ordinal>2</ordinal>
              <family>SAT_OLD_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[SAT_OLD_long.csv_A847F2504445497183CEB7D355885BD2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Score</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Score</remote-alias>
              <ordinal>3</ordinal>
              <family>SAT_OLD_long.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>341</approx-count>
              <contains-null>true</contains-null>
              <object-id>[SAT_OLD_long.csv_A847F2504445497183CEB7D355885BD2]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='SAT_OLD_long.csv' id='SAT_OLD_long.csv_A847F2504445497183CEB7D355885BD2'>
            <properties context=''>
              <relation connection='textscan.1rts8ux0wbyvzi12wxrrb11i5i01' name='SAT_OLD_long.csv' table='[SAT_OLD_long#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='string' name='Year' ordinal='1' />
                  <column datatype='string' name='Subject' ordinal='2' />
                  <column datatype='integer' name='Score' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='SAT_NEW_long' inline='true' name='federated.11t7efg1iybohx16ieuth0f119rh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SAT_NEW_long' name='textscan.1s9xl4x0k0n4sq120px4c1w1apaw'>
            <connection class='textscan' directory='C:/Users/emcdo/OneDrive/Documents/GitHub/SpringBoardProjects/Capstone3' filename='SAT_NEW_long.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1s9xl4x0k0n4sq120px4c1w1apaw' name='SAT_NEW_long.csv' table='[SAT_NEW_long#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='Year' ordinal='1' />
            <column datatype='string' name='Subject' ordinal='2' />
            <column datatype='integer' name='Score' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SAT_NEW_long.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SAT_NEW_long.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[SAT_NEW_long.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subject</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Subject]</local-name>
            <parent-name>[SAT_NEW_long.csv]</parent-name>
            <remote-alias>Subject</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[SAT_NEW_long.csv]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ACTsum' datatype='integer' name='[Calculation_1605814762568171526]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Score])' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
      <column caption='SAT_NEW_long.csv' datatype='table' name='[__tableau_internal_object_id__].[SAT_NEW_long.csv_8B152C9DAD614870B2CA38E1B2DA2E0D]' role='measure' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/emcdo/AppData/Local/Temp/TableauTemp/#TableauTemp_16pemoe1ha1f8z193aqj51d9jmni.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/12/2025 07:10:10 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>SAT_NEW_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[SAT_NEW_long.csv_8B152C9DAD614870B2CA38E1B2DA2E0D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>SAT_NEW_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[SAT_NEW_long.csv_8B152C9DAD614870B2CA38E1B2DA2E0D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Subject</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Subject]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Subject</remote-alias>
              <ordinal>2</ordinal>
              <family>SAT_NEW_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[SAT_NEW_long.csv_8B152C9DAD614870B2CA38E1B2DA2E0D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Score</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Score</remote-alias>
              <ordinal>3</ordinal>
              <family>SAT_NEW_long.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>257</approx-count>
              <contains-null>true</contains-null>
              <object-id>[SAT_NEW_long.csv_8B152C9DAD614870B2CA38E1B2DA2E0D]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='SAT_NEW_long.csv' id='SAT_NEW_long.csv_8B152C9DAD614870B2CA38E1B2DA2E0D'>
            <properties context=''>
              <relation connection='textscan.1s9xl4x0k0n4sq120px4c1w1apaw' name='SAT_NEW_long.csv' table='[SAT_NEW_long#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='string' name='Year' ordinal='1' />
                  <column datatype='string' name='Subject' ordinal='2' />
                  <column datatype='integer' name='Score' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='ACT_all_years_long' inline='true' name='federated.13nhwss1lnlii01f7th6d16xtesa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ACT_all_years_long' name='textscan.1s1p7dh07zjbqw18x80yz0f0mt4r'>
            <connection class='textscan' directory='C:/Users/emcdo/OneDrive/Documents/GitHub/SpringBoardProjects/Capstone3' filename='ACT_all_years_long.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1s1p7dh07zjbqw18x80yz0f0mt4r' name='ACT_all_years_long.csv' table='[ACT_all_years_long#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Subject' ordinal='2' />
            <column datatype='real' name='Score' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ACT_all_years_long.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[ACT_all_years_long.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ACT_all_years_long.csv_E9657FA33697487AB4834A3AF97B2DB6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[ACT_all_years_long.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ACT_all_years_long.csv_E9657FA33697487AB4834A3AF97B2DB6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subject</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Subject]</local-name>
            <parent-name>[ACT_all_years_long.csv]</parent-name>
            <remote-alias>Subject</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ACT_all_years_long.csv_E9657FA33697487AB4834A3AF97B2DB6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[ACT_all_years_long.csv]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ACT_all_years_long.csv_E9657FA33697487AB4834A3AF97B2DB6]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='SumACTScores' datatype='real' name='[Calculation_1605814762569412615]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Score])' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column caption='ACT_all_years_long.csv' datatype='table' name='[__tableau_internal_object_id__].[ACT_all_years_long.csv_E9657FA33697487AB4834A3AF97B2DB6]' role='measure' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/emcdo/AppData/Local/Temp/TableauTemp/#TableauTemp_18ei7jd0688ykv101nw7j1f4w69l.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/13/2025 05:57:04 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>ACT_all_years_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ACT_all_years_long.csv_E9657FA33697487AB4834A3AF97B2DB6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>ACT_all_years_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[ACT_all_years_long.csv_E9657FA33697487AB4834A3AF97B2DB6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Subject</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Subject]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Subject</remote-alias>
              <ordinal>2</ordinal>
              <family>ACT_all_years_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ACT_all_years_long.csv_E9657FA33697487AB4834A3AF97B2DB6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Score</remote-alias>
              <ordinal>3</ordinal>
              <family>ACT_all_years_long.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>87</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ACT_all_years_long.csv_E9657FA33697487AB4834A3AF97B2DB6]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='ACT_all_years_long.csv' id='ACT_all_years_long.csv_E9657FA33697487AB4834A3AF97B2DB6'>
            <properties context=''>
              <relation connection='textscan.1s1p7dh07zjbqw18x80yz0f0mt4r' name='ACT_all_years_long.csv' table='[ACT_all_years_long#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='string' name='Subject' ordinal='2' />
                  <column datatype='real' name='Score' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='All_SAT_Scores' inline='true' name='federated.1ctde0r0i3chkk18cckfm1fkasvs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='All_SAT_Scores' name='textscan.0qcpoph0gbo20x1cqffrh0ruyko2'>
            <connection class='textscan' directory='C:/Users/emcdo/OneDrive/Documents/GitHub/SpringBoardProjects/Capstone3' filename='All_SAT_Scores.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0qcpoph0gbo20x1cqffrh0ruyko2' name='All_SAT_Scores.csv' table='[All_SAT_Scores#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
            <column datatype='integer' name='All_SAT_Scores' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All_SAT_Scores.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[All_SAT_Scores.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[All_SAT_Scores.csv_4623A03B74674671B0462EF68002B17B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>All_SAT_Scores</remote-name>
            <remote-type>20</remote-type>
            <local-name>[All_SAT_Scores]</local-name>
            <parent-name>[All_SAT_Scores.csv]</parent-name>
            <remote-alias>All_SAT_Scores</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[All_SAT_Scores.csv_4623A03B74674671B0462EF68002B17B]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[All_SAT_Scores]' role='dimension' type='ordinal' />
      <column caption='Score' datatype='integer' name='[Calculation_1605814762657542152]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([All_SAT_Scores])' />
      </column>
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column caption='All_SAT_Scores.csv' datatype='table' name='[__tableau_internal_object_id__].[All_SAT_Scores.csv_4623A03B74674671B0462EF68002B17B]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/emcdo/AppData/Local/Temp/TableauTemp/#TableauTemp_0eylc8q1cd8xta16sgpg70tzxzx6.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/13/2025 06:56:43 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>0</ordinal>
              <family>All_SAT_Scores.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <object-id>[All_SAT_Scores.csv_4623A03B74674671B0462EF68002B17B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>All_SAT_Scores</remote-name>
              <remote-type>20</remote-type>
              <local-name>[All_SAT_Scores]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>All_SAT_Scores</remote-alias>
              <ordinal>1</ordinal>
              <family>All_SAT_Scores.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <object-id>[All_SAT_Scores.csv_4623A03B74674671B0462EF68002B17B]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='All_SAT_Scores.csv' id='All_SAT_Scores.csv_4623A03B74674671B0462EF68002B17B'>
            <properties context=''>
              <relation connection='textscan.0qcpoph0gbo20x1cqffrh0ruyko2' name='All_SAT_Scores.csv' table='[All_SAT_Scores#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
                  <column datatype='integer' name='All_SAT_Scores' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='SAT_NEW_long (2)' inline='true' name='federated.1g9qi5i0s7rzmc10r0yz80609xfm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SAT_NEW_long' name='textscan.1yln98n0zcwqyd19bcjja0kjich4'>
            <connection class='textscan' directory='C:/Users/emcdo/OneDrive/Documents/GitHub/SpringBoardProjects/Capstone3' filename='SAT_NEW_long.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1yln98n0zcwqyd19bcjja0kjich4' name='SAT_NEW_long.csv' table='[SAT_NEW_long#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='string' name='Subject' ordinal='2' />
            <column datatype='integer' name='Score' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SAT_NEW_long.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SAT_NEW_long.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[SAT_NEW_long.csv_9F5F4C5F2E37452F8D625F5FC771850F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[SAT_NEW_long.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[SAT_NEW_long.csv_9F5F4C5F2E37452F8D625F5FC771850F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subject</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Subject]</local-name>
            <parent-name>[SAT_NEW_long.csv]</parent-name>
            <remote-alias>Subject</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[SAT_NEW_long.csv_9F5F4C5F2E37452F8D625F5FC771850F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[SAT_NEW_long.csv]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[SAT_NEW_long.csv_9F5F4C5F2E37452F8D625F5FC771850F]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column caption='SAT_NEW_long.csv' datatype='table' name='[__tableau_internal_object_id__].[SAT_NEW_long.csv_9F5F4C5F2E37452F8D625F5FC771850F]' role='measure' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/emcdo/AppData/Local/Temp/TableauTemp/#TableauTemp_0gqw9l70w2sv4v112f6zn16tevd7.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/13/2025 05:32:29 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>SAT_NEW_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[SAT_NEW_long.csv_9F5F4C5F2E37452F8D625F5FC771850F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>SAT_NEW_long.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <object-id>[SAT_NEW_long.csv_9F5F4C5F2E37452F8D625F5FC771850F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Subject</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Subject]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Subject</remote-alias>
              <ordinal>2</ordinal>
              <family>SAT_NEW_long.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[SAT_NEW_long.csv_9F5F4C5F2E37452F8D625F5FC771850F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Score</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Score</remote-alias>
              <ordinal>3</ordinal>
              <family>SAT_NEW_long.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>257</approx-count>
              <contains-null>true</contains-null>
              <object-id>[SAT_NEW_long.csv_9F5F4C5F2E37452F8D625F5FC771850F]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='SAT_NEW_long.csv' id='SAT_NEW_long.csv_9F5F4C5F2E37452F8D625F5FC771850F'>
            <properties context=''>
              <relation connection='textscan.1yln98n0zcwqyd19bcjja0kjich4' name='SAT_NEW_long.csv' table='[SAT_NEW_long#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
                  <column datatype='string' name='Subject' ordinal='2' />
                  <column datatype='integer' name='Score' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='All_ACT_Scores' inline='true' name='federated.1qwgtcm0bg8my619metf00cvfmy2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='All_ACT_Scores' name='textscan.0hh5xio1umqws714jwye01xgfpxs'>
            <connection class='textscan' directory='C:/Users/emcdo/OneDrive/Documents/GitHub/SpringBoardProjects/Capstone3' filename='All_ACT_Scores.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0hh5xio1umqws714jwye01xgfpxs' name='All_ACT_Scores.csv' table='[All_ACT_Scores#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Score type' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Score' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All_ACT_Scores.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Score type]</local-name>
            <parent-name>[All_ACT_Scores.csv]</parent-name>
            <remote-alias>Score type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[All_ACT_Scores.csv_692E9C18C4C2436DA76D8CC7578798F2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[All_ACT_Scores.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[All_ACT_Scores.csv_692E9C18C4C2436DA76D8CC7578798F2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[All_ACT_Scores.csv]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[All_ACT_Scores.csv_692E9C18C4C2436DA76D8CC7578798F2]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='All_ACT_Scores.csv' datatype='table' name='[__tableau_internal_object_id__].[All_ACT_Scores.csv_692E9C18C4C2436DA76D8CC7578798F2]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/emcdo/AppData/Local/Temp/TableauTemp/#TableauTemp_1xireww1kgiqwn1174nec0g583sh.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/14/2025 05:16:00 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Score type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Score type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Score type</remote-alias>
              <ordinal>0</ordinal>
              <family>All_ACT_Scores.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[All_ACT_Scores.csv_692E9C18C4C2436DA76D8CC7578798F2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>All_ACT_Scores.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <object-id>[All_ACT_Scores.csv_692E9C18C4C2436DA76D8CC7578798F2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Score</remote-alias>
              <ordinal>2</ordinal>
              <family>All_ACT_Scores.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <object-id>[All_ACT_Scores.csv_692E9C18C4C2436DA76D8CC7578798F2]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='All_ACT_Scores.csv' id='All_ACT_Scores.csv_692E9C18C4C2436DA76D8CC7578798F2'>
            <properties context=''>
              <relation connection='textscan.0hh5xio1umqws714jwye01xgfpxs' name='All_ACT_Scores.csv' table='[All_ACT_Scores#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Score type' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Score' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='ACT Score trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run>ACT Scores Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_ACT_Scores' name='federated.1qwgtcm0bg8my619metf00cvfmy2' />
          </datasources>
          <datasource-dependencies datasource='federated.1qwgtcm0bg8my619metf00cvfmy2'>
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qwgtcm0bg8my619metf00cvfmy2].[none:Year:qk]' included-values='in-range'>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1qwgtcm0bg8my619metf00cvfmy2].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1qwgtcm0bg8my619metf00cvfmy2].[sum:Score:qk]' value='60' />
            <encoding attr='space' class='0' field='[federated.1qwgtcm0bg8my619metf00cvfmy2].[sum:Score:qk]' field-type='quantitative' max='22.211469838572643' min='18.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qwgtcm0bg8my619metf00cvfmy2].[sum:Score:qk]</rows>
        <cols>[federated.1qwgtcm0bg8my619metf00cvfmy2].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{6F2EDC31-727A-475B-BDCE-EF1C55E4A211}' />
    </worksheet>
    <worksheet name='ACT Statewide Changes'>
      <layout-options>
        <title>
          <formatted-text>
            <run>ACT State-By-State Scores</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ACT_all_years_long' name='federated.13nhwss1lnlii01f7th6d16xtesa' />
          </datasources>
          <datasource-dependencies datasource='federated.13nhwss1lnlii01f7th6d16xtesa'>
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13nhwss1lnlii01f7th6d16xtesa].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13nhwss1lnlii01f7th6d16xtesa].[avg:Score:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.13nhwss1lnlii01f7th6d16xtesa].[sum:Score:qk]</rows>
        <cols>([federated.13nhwss1lnlii01f7th6d16xtesa].[none:State:nk] / [federated.13nhwss1lnlii01f7th6d16xtesa].[none:Year:nk])</cols>
      </table>
      <simple-id uuid='{61F21525-E69A-4DD1-B47C-E718C3E09393}' />
    </worksheet>
    <worksheet name='ACT top 5 per year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 ACT Scoring States Each Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ACT_all_years_long' name='federated.13nhwss1lnlii01f7th6d16xtesa' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13nhwss1lnlii01f7th6d16xtesa'>
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[rank:sum:Score:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.13nhwss1lnlii01f7th6d16xtesa].[none:State:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.13nhwss1lnlii01f7th6d16xtesa].[none:State:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Alaska&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Hawaii&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.13nhwss1lnlii01f7th6d16xtesa].[rank:sum:Score:qk:1]' included-values='in-range'>
            <max>5</max>
          </filter>
          <slices>
            <column>[federated.13nhwss1lnlii01f7th6d16xtesa].[rank:sum:Score:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13nhwss1lnlii01f7th6d16xtesa].[Longitude (generated)]' field-type='quantitative' max='-6128855.0685557481' min='-11392342.976546019' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13nhwss1lnlii01f7th6d16xtesa].[Latitude (generated)]' field-type='quantitative' max='6419700.6358470144' min='4410735.8034305936' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.13nhwss1lnlii01f7th6d16xtesa].[sum:Score:qk]' />
              <lod column='[federated.13nhwss1lnlii01f7th6d16xtesa].[none:State:nk]' />
              <color column='[federated.13nhwss1lnlii01f7th6d16xtesa].[sum:Score:qk]' />
              <geometry column='[federated.13nhwss1lnlii01f7th6d16xtesa].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13nhwss1lnlii01f7th6d16xtesa].[none:Year:nk] * [federated.13nhwss1lnlii01f7th6d16xtesa].[Latitude (generated)])</rows>
        <cols>[federated.13nhwss1lnlii01f7th6d16xtesa].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{35480763-8C0E-4F85-A681-02C5145F08CD}' />
    </worksheet>
    <worksheet name='ACTYearByYear'>
      <layout-options>
        <title>
          <formatted-text>
            <run>ACT Scores By Year with Nationwide Year Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ACT_all_years_long' name='federated.13nhwss1lnlii01f7th6d16xtesa' />
          </datasources>
          <datasource-dependencies datasource='federated.13nhwss1lnlii01f7th6d16xtesa'>
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13nhwss1lnlii01f7th6d16xtesa].[sum:Score:qk]' field-type='quantitative' max='133.77000000000001' min='80.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-size' id='refline0' value='5' />
            <format attr='stroke-color' id='refline0' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.13nhwss1lnlii01f7th6d16xtesa].[sum:Score:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.13nhwss1lnlii01f7th6d16xtesa].[sum:Score:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.13nhwss1lnlii01f7th6d16xtesa].[sum:Score:qk]</rows>
        <cols>([federated.13nhwss1lnlii01f7th6d16xtesa].[none:Year:nk] / [federated.13nhwss1lnlii01f7th6d16xtesa].[none:State:nk])</cols>
      </table>
      <simple-id uuid='{2312E934-A159-4AFC-9048-FE807B48C178}' />
    </worksheet>
    <worksheet name='Average ACT / Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='ACT_all_years_long' name='federated.13nhwss1lnlii01f7th6d16xtesa' />
          </datasources>
          <datasource-dependencies datasource='federated.13nhwss1lnlii01f7th6d16xtesa'>
            <column caption='SumACTScores' datatype='real' name='[Calculation_1605814762569412615]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Score])' />
            </column>
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1605814762569412615]' derivation='User' name='[usr:Calculation_1605814762569412615:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13nhwss1lnlii01f7th6d16xtesa].[usr:Calculation_1605814762569412615:qk]' field-type='quantitative' max='5735.1000000000013' min='5000.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.13nhwss1lnlii01f7th6d16xtesa].[usr:Calculation_1605814762569412615:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.13nhwss1lnlii01f7th6d16xtesa].[usr:Calculation_1605814762569412615:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.13nhwss1lnlii01f7th6d16xtesa].[usr:Calculation_1605814762569412615:qk]</rows>
        <cols>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{C0FCA380-FFC6-4235-BFAB-77582497C4C2}' />
    </worksheet>
    <worksheet name='Avg ACT BestWorst'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average ACT Score for Highest &amp; Lowest Graduation States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ACT_all_years_long' name='federated.13nhwss1lnlii01f7th6d16xtesa' />
          </datasources>
          <datasource-dependencies datasource='federated.13nhwss1lnlii01f7th6d16xtesa'>
            <column caption='SumACTScores' datatype='real' name='[Calculation_1605814762569412615]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Score])' />
            </column>
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1605814762569412615]' derivation='User' name='[usr:Calculation_1605814762569412615:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13nhwss1lnlii01f7th6d16xtesa].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13nhwss1lnlii01f7th6d16xtesa].[usr:Calculation_1605814762569412615:qk]' field-type='quantitative' max='107.625' min='90.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-align' id='refline0' value='right' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.13nhwss1lnlii01f7th6d16xtesa].[usr:Calculation_1605814762569412615:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.13nhwss1lnlii01f7th6d16xtesa].[usr:Calculation_1605814762569412615:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13nhwss1lnlii01f7th6d16xtesa].[none:State:nk] * [federated.13nhwss1lnlii01f7th6d16xtesa].[usr:Calculation_1605814762569412615:qk])</rows>
        <cols>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{54AB2BC6-3684-4170-AE06-DB7DA69D93B1}' />
    </worksheet>
    <worksheet name='New SAT ACT BestWorst'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average New SAT Score for Highest &amp; Lowest Graduation States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SAT_NEW_long (2)' name='federated.1g9qi5i0s7rzmc10r0yz80609xfm' />
          </datasources>
          <datasource-dependencies datasource='federated.1g9qi5i0s7rzmc10r0yz80609xfm'>
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1g9qi5i0s7rzmc10r0yz80609xfm].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1g9qi5i0s7rzmc10r0yz80609xfm].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1g9qi5i0s7rzmc10r0yz80609xfm].[sum:Score:qk]' field-type='quantitative' max='2624' min='2000' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='text-align' id='refline1' value='right' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1g9qi5i0s7rzmc10r0yz80609xfm].[sum:Score:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.1g9qi5i0s7rzmc10r0yz80609xfm].[sum:Score:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1g9qi5i0s7rzmc10r0yz80609xfm].[none:State:nk] * [federated.1g9qi5i0s7rzmc10r0yz80609xfm].[sum:Score:qk])</rows>
        <cols>[federated.1g9qi5i0s7rzmc10r0yz80609xfm].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{5C6EAFA4-BB49-4FCE-868D-2A3C42D07055}' />
    </worksheet>
    <worksheet name='Old SAT ACT BestWorst'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Old SAT Score for Highest &amp; Lowest Graduation States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SAT_OLD_long (date)' name='federated.1jm96je00t8gf518ymjl60gt6di6' />
          </datasources>
          <datasource-dependencies datasource='federated.1jm96je00t8gf518ymjl60gt6di6'>
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jm96je00t8gf518ymjl60gt6di6].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jm96je00t8gf518ymjl60gt6di6].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jm96je00t8gf518ymjl60gt6di6].[sum:Score:qk]' field-type='quantitative' max='3486' min='3000' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='text-align' id='refline1' value='right' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1jm96je00t8gf518ymjl60gt6di6].[sum:Score:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.1jm96je00t8gf518ymjl60gt6di6].[sum:Score:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jm96je00t8gf518ymjl60gt6di6].[none:State:nk] * [federated.1jm96je00t8gf518ymjl60gt6di6].[sum:Score:qk])</rows>
        <cols>[federated.1jm96je00t8gf518ymjl60gt6di6].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{787BD26F-E217-45C8-A299-CD3F3AEEC74B}' />
    </worksheet>
    <worksheet name='SAT Scores - 10 yr forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run>SAT Scores with 10 year prediction</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_SAT_Scores' name='federated.1ctde0r0i3chkk18cckfm1fkasvs' />
          </datasources>
          <datasource-dependencies datasource='federated.1ctde0r0i3chkk18cckfm1fkasvs'>
            <column datatype='integer' name='[All_SAT_Scores]' role='dimension' type='ordinal' />
            <column caption='Score' datatype='integer' name='[Calculation_1605814762657542152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([All_SAT_Scores])' />
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1605814762657542152]' derivation='User' forecast-column-base='[usr:Calculation_1605814762657542152:qk]' forecast-column-type='forecast-value' name='[fVal:usr:Calculation_1605814762657542152:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1605814762657542152]' derivation='User' name='[usr:Calculation_1605814762657542152:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ctde0r0i3chkk18cckfm1fkasvs].[tyr:Year:qk]' field-type='quantitative' min='#1964-06-29 00:00:00#' range-type='fixedmin' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ctde0r0i3chkk18cckfm1fkasvs].[fVal:usr:Calculation_1605814762657542152:qk]' field-type='quantitative' max='550' min='450' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='5' />
            <format attr='stroke-color' id='refline0' value='#e1575956' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ctde0r0i3chkk18cckfm1fkasvs].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ctde0r0i3chkk18cckfm1fkasvs].[fVal:usr:Calculation_1605814762657542152:qk]</rows>
        <cols>[federated.1ctde0r0i3chkk18cckfm1fkasvs].[tyr:Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto-season' range-periods='Year-Trunc' range-size='10' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{7A0982B8-563B-43BE-B8B7-6838A553D0FA}' />
    </worksheet>
    <worksheet name='SAT1 StateYear/Score'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 SAT Scoring States Each Year (2012-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SAT_OLD_long' name='federated.0lyyte616wsfer14djb3k0nmdvw5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0lyyte616wsfer14djb3k0nmdvw5'>
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[rank:sum:Score:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0lyyte616wsfer14djb3k0nmdvw5].[none:State:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0lyyte616wsfer14djb3k0nmdvw5].[none:State:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Alaska&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Hawaii&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0lyyte616wsfer14djb3k0nmdvw5].[rank:sum:Score:qk:1]' included-values='in-range'>
            <max>5</max>
          </filter>
          <slices>
            <column>[federated.0lyyte616wsfer14djb3k0nmdvw5].[rank:sum:Score:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lyyte616wsfer14djb3k0nmdvw5].[Longitude (generated)]' field-type='quantitative' max='-4887681.2736027539' min='-16649111.367037535' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0lyyte616wsfer14djb3k0nmdvw5].[Latitude (generated)]' field-type='quantitative' max='7564826.3805317357' min='3075730.9651579186' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0lyyte616wsfer14djb3k0nmdvw5].[sum:Score:qk]' />
              <lod column='[federated.0lyyte616wsfer14djb3k0nmdvw5].[none:State:nk]' />
              <color column='[federated.0lyyte616wsfer14djb3k0nmdvw5].[sum:Score:qk]' />
              <geometry column='[federated.0lyyte616wsfer14djb3k0nmdvw5].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lyyte616wsfer14djb3k0nmdvw5].[none:Year:nk] * [federated.0lyyte616wsfer14djb3k0nmdvw5].[Latitude (generated)])</rows>
        <cols>[federated.0lyyte616wsfer14djb3k0nmdvw5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F4AD02D2-0AF2-4735-A0CF-63A709D7196B}' />
    </worksheet>
    <worksheet name='SAT1 Statewide Changes'>
      <layout-options>
        <title>
          <formatted-text>
            <run>SAT Scores By State (2012-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SAT_OLD_long' name='federated.0lyyte616wsfer14djb3k0nmdvw5' />
          </datasources>
          <datasource-dependencies datasource='federated.0lyyte616wsfer14djb3k0nmdvw5'>
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lyyte616wsfer14djb3k0nmdvw5].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lyyte616wsfer14djb3k0nmdvw5].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lyyte616wsfer14djb3k0nmdvw5].[sum:Score:qk]' field-type='quantitative' max='3820' min='2000' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lyyte616wsfer14djb3k0nmdvw5].[avg:Score:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lyyte616wsfer14djb3k0nmdvw5].[sum:Score:qk]</rows>
        <cols>([federated.0lyyte616wsfer14djb3k0nmdvw5].[none:State:nk] / [federated.0lyyte616wsfer14djb3k0nmdvw5].[none:Year:nk])</cols>
      </table>
      <simple-id uuid='{0AEB401C-C1A3-4835-AF1B-291CADB86156}' />
    </worksheet>
    <worksheet name='SAT1YearByYear'>
      <layout-options>
        <title>
          <formatted-text>
            <run>SAT State-By-State Scores (2012-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SAT_OLD_long' name='federated.0lyyte616wsfer14djb3k0nmdvw5' />
          </datasources>
          <datasource-dependencies datasource='federated.0lyyte616wsfer14djb3k0nmdvw5'>
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lyyte616wsfer14djb3k0nmdvw5].[sum:Score:qk]' field-type='quantitative' max='3820' min='2000' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-size' id='refline0' value='5' />
            <format attr='stroke-color' id='refline0' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0lyyte616wsfer14djb3k0nmdvw5].[sum:Score:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0lyyte616wsfer14djb3k0nmdvw5].[sum:Score:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0lyyte616wsfer14djb3k0nmdvw5].[sum:Score:qk]</rows>
        <cols>([federated.0lyyte616wsfer14djb3k0nmdvw5].[none:Year:nk] / [federated.0lyyte616wsfer14djb3k0nmdvw5].[none:State:nk])</cols>
      </table>
      <simple-id uuid='{CC31FEF2-E011-4FCB-844D-AC69A0FA0FC9}' />
    </worksheet>
    <worksheet name='SAT2 StateYear/Score'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 SAT Scoring States Each Year (2017-2019)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SAT_NEW_long' name='federated.11t7efg1iybohx16ieuth0f119rh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11t7efg1iybohx16ieuth0f119rh'>
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[rank:sum:Score:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.11t7efg1iybohx16ieuth0f119rh].[none:State:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.11t7efg1iybohx16ieuth0f119rh].[none:State:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Alaska&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Hawaii&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.11t7efg1iybohx16ieuth0f119rh].[rank:sum:Score:qk:1]' included-values='in-range'>
            <max>5</max>
          </filter>
          <slices>
            <column>[federated.11t7efg1iybohx16ieuth0f119rh].[rank:sum:Score:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11t7efg1iybohx16ieuth0f119rh].[Longitude (generated)]' field-type='quantitative' max='-4744457.6167481244' min='-16505887.710182913' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11t7efg1iybohx16ieuth0f119rh].[Latitude (generated)]' field-type='quantitative' max='7564826.3805317376' min='3075730.9651579168' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.11t7efg1iybohx16ieuth0f119rh].[none:State:nk]' />
              <color column='[federated.11t7efg1iybohx16ieuth0f119rh].[sum:Score:qk]' />
              <tooltip column='[federated.11t7efg1iybohx16ieuth0f119rh].[sum:Score:qk]' />
              <geometry column='[federated.11t7efg1iybohx16ieuth0f119rh].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.11t7efg1iybohx16ieuth0f119rh].[none:Year:nk] * [federated.11t7efg1iybohx16ieuth0f119rh].[Latitude (generated)])</rows>
        <cols>[federated.11t7efg1iybohx16ieuth0f119rh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EAA33A17-35DE-471F-9EDC-D8EDCDEE8439}' />
    </worksheet>
    <worksheet name='SAT2 Statewide Changes'>
      <layout-options>
        <title>
          <formatted-text>
            <run>SAT Scores By State (2012-2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SAT_NEW_long' name='federated.11t7efg1iybohx16ieuth0f119rh' />
          </datasources>
          <datasource-dependencies datasource='federated.11t7efg1iybohx16ieuth0f119rh'>
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11t7efg1iybohx16ieuth0f119rh].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11t7efg1iybohx16ieuth0f119rh].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11t7efg1iybohx16ieuth0f119rh].[sum:Score:qk]' field-type='quantitative' max='2726' min='1750' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11t7efg1iybohx16ieuth0f119rh].[avg:Score:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11t7efg1iybohx16ieuth0f119rh].[sum:Score:qk]</rows>
        <cols>([federated.11t7efg1iybohx16ieuth0f119rh].[none:State:nk] / [federated.11t7efg1iybohx16ieuth0f119rh].[none:Year:nk])</cols>
      </table>
      <simple-id uuid='{D8B5F327-CFFF-4C1F-A559-17A8EA0ED094}' />
    </worksheet>
    <worksheet name='SAT2 YearByYear'>
      <layout-options>
        <title>
          <formatted-text>
            <run>SAT State-By-State Scores (2017-2019)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SAT_NEW_long' name='federated.11t7efg1iybohx16ieuth0f119rh' />
          </datasources>
          <datasource-dependencies datasource='federated.11t7efg1iybohx16ieuth0f119rh'>
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year1' datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11t7efg1iybohx16ieuth0f119rh].[sum:Score:qk]' field-type='quantitative' max='2726' min='1500' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-size' id='refline0' value='5' />
            <format attr='stroke-color' id='refline0' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.11t7efg1iybohx16ieuth0f119rh].[sum:Score:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.11t7efg1iybohx16ieuth0f119rh].[sum:Score:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.11t7efg1iybohx16ieuth0f119rh].[sum:Score:qk]</rows>
        <cols>([federated.11t7efg1iybohx16ieuth0f119rh].[none:Year:nk] / [federated.11t7efg1iybohx16ieuth0f119rh].[none:State:nk])</cols>
      </table>
      <simple-id uuid='{CED9233F-1F7F-443A-BAFC-8E1DD275016F}' />
    </worksheet>
    <worksheet name='Total ACT Year by Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='ACT_all_years_long' name='federated.13nhwss1lnlii01f7th6d16xtesa' />
          </datasources>
          <datasource-dependencies datasource='federated.13nhwss1lnlii01f7th6d16xtesa'>
            <column caption='SumACTScores' datatype='real' name='[Calculation_1605814762569412615]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Score])' />
            </column>
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1605814762569412615]' derivation='User' name='[usr:Calculation_1605814762569412615:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13nhwss1lnlii01f7th6d16xtesa].[usr:Calculation_1605814762569412615:qk]' field-type='quantitative' max='5735.1000000000049' min='5000.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.13nhwss1lnlii01f7th6d16xtesa].[usr:Calculation_1605814762569412615:qk]</rows>
        <cols>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{17565758-E1E6-4215-A728-BB86B9126D5B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Old / New SAT Compare'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49002' id='5' name='SAT2 StateYear/Score' w='97538' x='1231' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49002' id='6' name='SAT1 StateYear/Score' w='97538' x='1231' y='998'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='17' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49002' id='6' is-fixed='true' name='SAT1 StateYear/Score' w='97538' x='1231' y='998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49002' id='5' is-fixed='true' name='SAT2 StateYear/Score' w='97538' x='1231' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BE635EF6-4128-4640-84F7-4BDEABA2AF75}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='219'>
    <window class='worksheet' name='ACT top 5 per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:State:nk]</field>
            <field>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:Subject:nk]</field>
            <field>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:Year:nk]</field>
            <field>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:Year:qk]</field>
            <field>[federated.13nhwss1lnlii01f7th6d16xtesa].[sum:Score:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CFA0CD5-6430-4A90-89EA-39C88F1491FE}' />
    </window>
    <window class='worksheet' name='ACTYearByYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:State:nk]</field>
            <field>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A97995B-33A2-4967-96EA-B17A3260F94B}' />
    </window>
    <window class='worksheet' name='ACT Statewide Changes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.13nhwss1lnlii01f7th6d16xtesa].[avg:Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6733F426-254E-4227-BFCC-4806C47BEC7B}' />
    </window>
    <window class='worksheet' name='SAT1 Statewide Changes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0lyyte616wsfer14djb3k0nmdvw5].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lyyte616wsfer14djb3k0nmdvw5].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEE573B1-0286-4ED6-98CA-90A72243E796}' />
    </window>
    <window class='worksheet' name='SAT1 StateYear/Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lyyte616wsfer14djb3k0nmdvw5].[none:State:nk]</field>
            <field>[federated.0lyyte616wsfer14djb3k0nmdvw5].[none:Subject:nk]</field>
            <field>[federated.0lyyte616wsfer14djb3k0nmdvw5].[none:Year:nk]</field>
            <field>[federated.0lyyte616wsfer14djb3k0nmdvw5].[none:Year:qk]</field>
            <field>[federated.0lyyte616wsfer14djb3k0nmdvw5].[sum:Score:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6FDBF3E-0D96-4B0D-BE39-3443539D5100}' />
    </window>
    <window class='worksheet' name='SAT1YearByYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0lyyte616wsfer14djb3k0nmdvw5].[sum:Score:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0lyyte616wsfer14djb3k0nmdvw5].[none:State:nk]</field>
            <field>[federated.0lyyte616wsfer14djb3k0nmdvw5].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{552AA3F3-0262-42E9-8966-87593D9738AE}' />
    </window>
    <window class='worksheet' name='SAT2 Statewide Changes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.11t7efg1iybohx16ieuth0f119rh].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11t7efg1iybohx16ieuth0f119rh].[avg:Score:qk]</field>
            <field>[federated.11t7efg1iybohx16ieuth0f119rh].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{255CF0FE-3F8A-4A60-BB21-A8AB3A1E6A7A}' />
    </window>
    <window class='worksheet' name='SAT2 StateYear/Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11t7efg1iybohx16ieuth0f119rh].[none:State:nk]</field>
            <field>[federated.11t7efg1iybohx16ieuth0f119rh].[none:Subject:nk]</field>
            <field>[federated.11t7efg1iybohx16ieuth0f119rh].[none:Year:qk]</field>
            <field>[federated.11t7efg1iybohx16ieuth0f119rh].[sum:Score:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FBA31B3-D321-4986-A177-480162CABF2B}' />
    </window>
    <window class='worksheet' name='SAT2 YearByYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11t7efg1iybohx16ieuth0f119rh].[none:State:nk]</field>
            <field>[federated.11t7efg1iybohx16ieuth0f119rh].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B3632AC-E546-474F-838D-7E259E3655A2}' />
    </window>
    <window class='dashboard' name='Old / New SAT Compare'>
      <viewpoints>
        <viewpoint name='SAT1 StateYear/Score'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SAT2 StateYear/Score'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{C7E5E936-9CB5-44AB-A078-E9E35FD94BE3}' />
    </window>
    <window class='worksheet' name='Average ACT / Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11t7efg1iybohx16ieuth0f119rh].[none:Year:nk]</field>
            <field>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02309350-FD2B-4F60-8FB2-5225C12013BF}' />
    </window>
    <window class='worksheet' name='Total ACT Year by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.13nhwss1lnlii01f7th6d16xtesa].[usr:Calculation_1605814762569412615:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:Year:nk]</field>
            <field>[federated.1ctde0r0i3chkk18cckfm1fkasvs].[none:All_SAT_Scores:nk]</field>
            <field>[federated.1ctde0r0i3chkk18cckfm1fkasvs].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B28692E1-D163-4990-B8E9-C4FCFC38C37E}' />
    </window>
    <window class='worksheet' maximized='true' name='SAT Scores - 10 yr forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ctde0r0i3chkk18cckfm1fkasvs].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ctde0r0i3chkk18cckfm1fkasvs].[tyr:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ctde0r0i3chkk18cckfm1fkasvs].[fVal:usr:Calculation_1605814762657542152:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ctde0r0i3chkk18cckfm1fkasvs].[tyr:Year:qk]</field>
                  <field>[federated.1ctde0r0i3chkk18cckfm1fkasvs].[fPIL:usr:Calculation_1605814762657542152:qk]</field>
                  <field>[federated.1ctde0r0i3chkk18cckfm1fkasvs].[fPIU:usr:Calculation_1605814762657542152:qk]</field>
                  <field>[federated.1ctde0r0i3chkk18cckfm1fkasvs].[fVal:usr:Calculation_1605814762657542152:qk]</field>
                  <field>[federated.1ctde0r0i3chkk18cckfm1fkasvs].[none:Forecast Indicator:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>#2019-01-01 00:00:00#</value>
                <value>481</value>
                <value>503</value>
                <value>492</value>
                <value>&quot;Estimate&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ctde0r0i3chkk18cckfm1fkasvs].[none:All_SAT_Scores:ok]</field>
            <field>[federated.1ctde0r0i3chkk18cckfm1fkasvs].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{264E0B5E-00C0-401E-8A0B-ED444C07988A}' />
    </window>
    <window class='worksheet' name='ACT Score trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qwgtcm0bg8my619metf00cvfmy2].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F1C6175-18DD-4C10-B283-26D9C10F42EA}' />
    </window>
    <window class='worksheet' name='Avg ACT BestWorst'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:State:nk]</field>
            <field>[federated.13nhwss1lnlii01f7th6d16xtesa].[none:Year:nk]</field>
            <field>[federated.1qwgtcm0bg8my619metf00cvfmy2].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD2C98C2-DD0F-463C-828C-0D5B1B6BB4CD}' />
    </window>
    <window class='worksheet' name='Old SAT ACT BestWorst'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jm96je00t8gf518ymjl60gt6di6].[none:State:nk]</field>
            <field>[federated.1jm96je00t8gf518ymjl60gt6di6].[none:Year:ok]</field>
            <field>[federated.1jm96je00t8gf518ymjl60gt6di6].[tyr:Year:qk]</field>
            <field>[federated.1qwgtcm0bg8my619metf00cvfmy2].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01C0376F-3BD6-4478-B244-B184002453B4}' />
    </window>
    <window class='worksheet' name='New SAT ACT BestWorst'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1g9qi5i0s7rzmc10r0yz80609xfm].[none:State:nk]</field>
            <field>[federated.1g9qi5i0s7rzmc10r0yz80609xfm].[none:Year:ok]</field>
            <field>[federated.1g9qi5i0s7rzmc10r0yz80609xfm].[tyr:Year:qk]</field>
            <field>[federated.1qwgtcm0bg8my619metf00cvfmy2].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09031CA3-3A97-42CD-9989-DB74546BCC13}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ACT Score trend' width='192'>
      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
      m4vrQ/+6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ACT Statewide Changes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ACT top 5 per year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ACTYearByYear' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average ACT / Year' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg ACT BestWorst' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New SAT ACT BestWorst' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAXOklEQVR4nO3daW8cSX7n8W9elcU6Kd7iIergIVLqbnWruz2HF2PPzo492PWjMewH9mKe
      zD7zS1rsgzWMxfhoDDCLxcAY2LDHdqOnD0ls8RZJkcWjeBVZJOvIM/YBKUoU1a1ukmIVmf8P
      QIiVVZkZKtavIiMyM0JTSimEiCi91gUQopYufABKpVKtiyAusAsfAM/zal0EcYFd+AAIcRoS
      ABFpEgARaRIAEWnms192dnZwHOeN7ETXdQzDeCPbLpfLb2S7IhoOA2DbNqZpft1rT0zXdeLx
      +Dd4pcJzXUJ0bMvEcRx008LQFK4fErdjuE4V3bQwXwhUY2PjGym3uPzezCf+hMIgYP7pLBvr
      O9zs72R1o0R7x1XWczMEYUhLRzfLK6toms67774lx2/i1OoqALph0NZ8hbJnsLmYJ4jFyeeX
      iMUa6e9tZOTRLNeGhyktL+AqhRWGhGGI7/u1Lrq4oOoqAIFb4fHkU/r6+gmqGjuejVvdw/eK
      LMzv0drVwcriIqHn0atp6IaBrutv7NBNXH519cnRzBh9t66jVEh7zy3ihQKJTBd66LJb8Whq
      zNBU3MKwU3L4I86E9uxqUMdxCILgjezkmzeCv73t7W1pBIsTky9SEWkSABFpEgARaRIAEWkS
      ABFpEgARaRIAEWkSABFpdXUmWIU+UxNjlAOL/p5mpmaXae+6hlbdYnW7zPDwIE/Gx4ilW+i7
      0Y1W6wKLC6+uAoBm0Dc4xPjIGFvFAr7SsG2D9c2AoZttjD0ao/1GH6XVHJ5SmEqhlHpjZ7DF
      5VdfAVAhU+PjdPX105hqoLsn5OGjR8TtFCgFaCj2x/F68dtf06QuECdTVwEI/AqlUpWl+RxB
      e4bl5VVarvZiukUm5ja4c2/48BDI1DS0gx9dl6aMOBm5GE5Emnx1ikiTAIhIkwCISJMAiEiT
      AIhIkwCISJMAiEiTAIhIq6sAqDDk6cwk49NzKKCwukB+s0RhdYnRiWmCMGBmcpzcykatiyou
      ibq6FAKgvfMaTycnqbpl8qvLBHET3SlyrTPN2JcTpNs72Vtfwu9o5tnooDLPnzipmgVgc2ub
      ZCJB3I49X6jB8sIsmc5eFsZHKTkehe0VeluzxOwGPGeDuB0jME0CQDsYGlGuBhUnVbMAfPL5
      l8zO5/j5X/6UuG0DELgl8mvbZD2T2+98gOltM7eq0Kt5RqdyDNwdZGZyAjN5hZimocnQiOKU
      zv1iuDAM+eu/+xWfPhjlv/34B3xw7w7NTSe/mE0uhhOnce5fnUoprvd0EYaKP/7h989790Ic
      ce41gFKKMAzP7Dp+qQHEaZx7N6imaRiGgQp9KlUHXxqwooZq1nr851//EqvlOikrxv3792pV
      DBFxNTsRZpoxRj/7d/aC2Otf/A1VSzusrK7v3z6sFNuFdfLrBcLAY2Vpkd2yQ+A5z18jIq9m
      NUBoNPCz//FXJGzrzLb5ZHqSzbV19oa+R393ipXlFZZnRim890PczQIff/6I1pSJYZmsFge4
      2nIFLwjpbs2cWRnOw354nydYvfSLeunBy1l/+cThS5s7HHjg2657lvt96alX/5+PrHt0p1+3
      7vNltTwT7BT5h7/9Bbff+ZAP3x44k0329nQyv1Kkqz0Dmk7Kgtk1hw87mng4+ilaLI2KwXfe
      f5d/fzzLL/55ktmVbdqbkvsbOPaGcvhOH/9jvvT4pb+4Ovrk89d8i20cLcfRUTGe0dAOh8jQ
      jj5x8Pj50pcHz9BeWPjqdZ8/88p1X7Xvw8dft1/tpdd+9bpHy/LC80df8up1X7XvF1/MKwKg
      Qp+//8X/4Y9/+heMPn7Id9577/C58bHHDA3ffXmVE0lnr9BQ2SKRSJ3J9sDno4/+L3fe+z0C
      t0yhFLK5V2WgK8nI+FPiLVdxcstosRj/9vHHZLvv8rOfdFNxPAZ6mg+38to3/xVDsLz0nn7r
      bbz8ATj2Zzy2De3YH1aczLEAlNaf0Nxxk7ncKts7O+ysL/Ev//EJHf33WBz5HePj03zv+7/H
      Z7/7hKbuYQq5h2xt79LS3k5H11uU1qfIV3T+9L/+6Gt3vLlb5Uc//H0+/3Keu32dB0sVYRCi
      AF3XCIIQ3TDQlCJQCtMwCAIfTTPQ9f1PwNraGouLi0DI9Vt9bBU2+ezjFfRUG1ZQRaU7Sas9
      Novb3OjposGEQrGE7mzhO2ABc082z/ZdFRfGsQA8+HyMPWKsPx4lmzXJ5eYwDZ3Jp4sM3hgi
      ZSsej05j2iZzkwvc6r9Bd3uBa299n6lPHrK+U2Z6ce21O755rYsvR5/QNzB0uCwMAqanJtjY
      2GPo7i3yK2s4vo6tylS9gKs918nlcuiGzf1376IBbW1tch5AnNixAPS+9SH/qaebxVwOX9PI
      WgEbe3Cz9yal5UmKYRsfvtPE52PTvH//BpmshRm2kYjZXB/sI5zxab1267U7nltc4Xvf/ZBP
      H85wvbMVAN0w6exooxpYZNNZlp7OYSWb0YMYd/uvMPJolusH8wQ7Mk+wOAM1GRjL9zy21hb5
      7ScP+cF/+QnN6f3nAq/MZw/GGBjoxyDACxRP53PYBqQSJsrKsFf1CKol3r73NjpyJlicTk3O
      A3z66e9oiCn2Ki6PRsYOl2u6RffVdvb2ytgNDVQrFYbu3GFgsJ/ElS5uXL9GT2uGvsHB+rqT
      R1xYNekGDSvb/M1H4/z5X/wZX345fbhcNyy6enoOH3d1dx/8ZtEW3++qbGxuPc+iikuupmOD
      KhWilHbYo3MScggkTqOmd5Jomi792aKm5FBaRJoEQESaBEBEmgRARJoEQESaBEBEWl0NqPNs
      nuBKaNPf08zM/DKZ5g7i4R75Qpk7d28zPTaKnWnlVm/n6zcoxGvUVQD25wkeZmJkFD11haGB
      BiZn56lgcPtGC48fjNJ24ybl1UU8dRXjYJ7gMAxrXXJxQdVXAFTI9MQY7TdvQbnI+Pwqt4f6
      mZmc27+VR6nDm0mO3vImN/iKk6mrAAR+hZ3dCn5uiWxSIwg8VvIFskmd8Zk1hg/mCbbSLVgv
      zBNsGMbrNy7EK8g8wSLSpBdIRJoEQESaBEBEmgRARJoEQESaBEBEmgRARJoEQERaXQVAqZCF
      uWkmZ+YJA5+Z2TmUUmyvrzA+NUMQhsxNT7C0Vqh1UcUlUVcBQCma2roId7bYq5ZZ29hAqZDF
      fIHOKyYToxOQaqW4uoyMBSfOQl1dC4Sms770lNTVHjLJDNlUAxBimjbxRBKnvElLQxxlmgRK
      Hc4TLEMjipOqqwAE7h6LK5tccQ1SsYB8fg0r0YhtuDyeWGDg7gBPJiexElmZJ1icCbkYTkRa
      fbUBhDhnEgARaRIAEWkSABFpEgARaXUWAEWxsM7a5jYqDFhZXsILFG5lj/z6/kR2Wxur7Jad
      GpdTXBZ11YEeBgF7FZfNlRzlnSR6PMv4xBSaXyGbjDG7t0fFC/EWVw+nSBLiNOrqM6QbBhYe
      VmMTYVXR0dFBTHexYmk6Ojso5NdpbW8na8fwal1YcSnUVQB8Z5cHX04ROi7JrM3IgweEZobQ
      3Wbk8RTdt3qZmxxlo+oTq3VhxaVQV2eC1cFIb7A/m7p6aSAsXdNQKmR/pvT95XImWJzGYRvA
      cRxc130jO9E0jWq1+ka2XS6X38h2RTQcBiCTydSyHAcUnusSKI14zMJxquhmDENTuH5A3LZx
      nSqaYWGZz0eDkxpAnFTd9QLNP51jY73Ijb5O1jbLdHR0sJabIVQhTe3d5POrgM67775VXw0Y
      cSHVVQB0w6C1qZGyr1NYyhPE4iznl7BjjfT3NjLyaJZrw8OUlhdwlcKS+wHEKdVVAAK3zOPJ
      p/T19xFWNYpeDK9awveKzM/v0tbVwcpijtDz6NU0dLkfQJxSXX1yNNNmoO8GCmjvuUXD1hYN
      6W700GWv6nMlm6apuIURT8nhjzgTh92gF5V0g4rTkC9SEWkSABFpEgARaRIAEWkSABFpEgAR
      aRIAEWkSABFpdXUmWIU+UxNjlAOLvp5mpmeXae+6hlbdYnWrzPCdQZ6MjxFLt9B3oxut1gUW
      F15dBQDNoH9wiLGRMbaLBXylEbMNNjYDhm61MfZojPabfZTyOTylMA9uoHlTN/KIy6++AqBC
      JsfH6errpzHVQPe1kIcPHxG3U6AUoD2/Y+yF1Z7dHSbEt1VXAQj8CqWSw9J8jqA9w/LyKi1X
      e7HcIhNzG9y9d4fp8VFi6RZMbf+2SE3T0HVpyoiTkYvhRKTJV6eINAmAiDQJgIg0CYCINAmA
      iDQJgIg0CYCINAmAiLS6CoAKQ54+mWR8eg4FFFYXyG/uUVhdYnR8miAMmJkcI7eyUeuiikui
      ri6FAGjv6mVucoKKWya/ukIQN9HdIteuphn7coJ0eyd760v4Hc08Gx30gp/MFjVUswBsFrZJ
      JhuI2/bzhRosL8yQ7ewlNz5KyXEpbK/Q25olZsfxnA3idozANAkA7WBoRLkaVJxUzQLwyRdf
      Mvs0x8//+08PQxC4JfJr22Q9k9vvfIDpFZlbDdGreUanFhl8a5AnExNYySvENA1NhkYUp3Tu
      F8OFYchf/92v+PTBY/7kj/6A99+5Q3PTyS9mk4vhxGmc+1enUorrPV2oUPFHf/j98969EEec
      ew2glCIMwzO7jl9qAHEa594NqmkahmGgQp9KxcGXBqyooZq1Hv/p178k1tJLyrK5f/9erYoh
      Iu5YDTA/M8bKxi7zC/NvtH/dsmKMfv4flAKZ8FTUzrEawFUm5bUcvgopbuaZX14jnW5EM0xW
      5ucYGr5FaDXSnGk41Y5DPc7Pfv5XJGzrVNsR4jRe0QbQ6W7Lsri2zcrCAm4IRsymtJGjuSXL
      4+k1UqnXz/n7Ws4O//C3v+DTkanTb0uIEzoWgKamK6RbOrne0cyNgUFsXachkaSxqY2em4N0
      tqax9dMPQ5LONtIQj5FIJE+9LSFOqmajQvz6//2KDz98jy9GF/jRD757sHR/kCuFhqFr+H6A
      YZpoShGECtM0CHwfTdcPu1ClG1ScRs16gW72djM6Nktf3+3DZWEQ8GRqgs3NPW7fuUU+v07V
      04irMo4X0NHTy2JuCc2wuP/uWzI0oji1YwFYXpjGSnfRklZ88TjH/Xu3j61ULG6TzZ7uW3cu
      t8z3vvshnz6c4XpXKwC6YdLZ3kY1sMimsyw9nSOWbEYPYtzpv8LIo1l6D+YJdmSeYHEGjh0C
      TU1PopROylDkdhxudWRZXitw9WonXqhA6QReCUP5FMqKlpRJfmObnpuDtGQT32innudRXF/k
      Xz5+yB/8+Cc0p/cb1YFX5rMvRukfGMDUAtxAMb+Qw9Yh2WCixTLsVj2Caom3772NztFDoGp5
      l+KeS1trM5oGlb0ddqo+2YTFRqGIFU/Q1pRhdW2DppY2YmZd3Q4hauDYJ0DTDCwCtj1IWxqz
      c3NoaCgzztzjBySvNLG7u0ux5PLWUD+FYpl33x5gdWntG+/0s09/R9xSlKouj0ZGn+9bt+jp
      ukq5VMZuaMCpVhkevsvAYD/J5i6uX7/GtbYMfYO3X3kKe3pynLEHH/NkaRtCn6nJScY+/kem
      V/fY3NzgH3/zT3z28b+xuJynVHVwPJ+K453ojROXw7FDoHQ6RTqusVrUiGkOzdkEa1tl8MoM
      3v8Ou+trZLONmPg8npim9UqKByPT9PYdP1T6Kqq6zd98NM6f/+Wf8Xhk+nC5blh0dncfPu7q
      6josZlt8v7co29T6ldu9ca2bhXyRrrYM6DrXuttY2thjsLeDjalF7v/+jxn5178nm27CM1P8
      5sEyyxu7fDDUSTZpk0naZBI2mWScbNImnYhhGjqGoWPoGvrBWKTi8qjp2KBKhSiloZ+iW/X5
      IZDP//6f/4u33v8O/f038VyPX370Effuf8Dg8BAf/+tv+eF//kN++5tfE0tnCOxmnNBmc7dC
      Z3OKnZJDseSwU3bYKe3/7FZcAHRtv4y2ZRyG5DAwL4SlwbZosE0StoVp6BKWC+ASDY4bsp5f
      xQ0UuLsYjT1ozjZ+AK3t7YR+QDweIww81je2aGltxXhN8JRSeEGI5wd4fkjF8fbDUT4Iy4s/
      ZYeKs39IVXY8dF0jk7BJJ2wyidjz4KTipF8MUMLGtoyDka739yvBOT+XKAD1QymF6wXslB12
      y+7zWuWF2qX4QnDCUBGzDGzLwI6ZZBpiZJLxgxrmaFgabBPbMrFjBjHTkLCckgSgxpRS+EGI
      4wZUPZ+q67P7ihqmeBCequvjegGeHxAqRaohdhCQ/cBkE/ZhcNKJGOnE/r8J25KwvILcTFtj
      mqZhmQaWaZDi66+MffZdFSqFUuAHIbtl51j7ZXF9h+JTh92DGmi34uC4AfGYSSJukbAtUg3W
      Yfsl80INk03aJBtiWIaOaepYhnGqNlq9kxogIoIwpOL4lKv7bZS9ivvKw7FiqUrF8QlDhWI/
      aAnben4o9kINs1/L2CTjFsmDYBnGxTq3IgEQRygFCkUQhPgHP6Wqd6Sx//zwrMpuxaVU8ShX
      XcqOj20ZJBtipBpipBtiR8LyYu9ZOmFjGTq6rmHoOppWm8a/BECcGaUUFcdnr+Ie/jyvYapH
      wrNXdkEDQ9cxDY2YZb50LuZoWBK2RTxmErdNrDPsYq6rADybJ7gSxujvaWFmfplMcwfxYI/8
      Vpk7d24fTpJ363oXGhKAi0opheeHuH6A6wdUHf/IYdiLh2e7ZZeK41Fx9zsJNDhSqxz2lr34
      +0GngG0ZR/b7cnDqKwBKEYYBEyOj3Hz7LoZXZWp2HgOTG90ZxqdWabtxk/LqIteHbmMoxfT0
      NI7j1Lro4hw962J+FphSZb9dU656h22cZ78rIB4zabBN4jGLRNwkEd/vFUvEzTrrBVIh0xNj
      dNzsg3KRiYU1hm7382Ryjv2zROowwc9S29bWRiaTqVmRRX3zA4Xj+VTdYL+LueLuH44d1C51
      FYDAr7CzW8HPLZJNaQS+x3K+QDZpMD6zxvA7wzwZHyOWbsF6YZ5gwzBev3ERSYbB/snFr7jx
      sK4OgU5C2gDiNC5Wp60QZ0wCICJNAiAiTQIgIk0CICJNAiAiTQIgIk0CICKtrgKgVMjC7DST
      M/OEgc/M7CxKKbbXVxifmiEIQ+amJ1haLdS6qOKSqKsAoBTN7V2EO1vsVcusbWyiVMhifovO
      Kxbjjycg1UpxbRkZC06chbq6FghNY23pKamrPWSSGbKpBiDENGPEEwncygYt8TjKNAmUOpwn
      WIZGFCdVVwEI3BKL+QJXXINULGB1dQ0r0YhtuDyeWGDg7iBPJiexElmZJ1icCbkYTkRafbUB
      hDhnEgARaRIAEWkSABFpEgARaXUWAEWxsM7qxjYqDFhZWsILQtzKHitrmwAU1vPslmUUCHE2
      6qobNAx88qtrbCznyTQl0Rsa2S5so/lVsikLX09S8RReeeeVUyQJ8W3VVQ2gGwamcrEamwkd
      RUdHOzHdxYql6LjaQSG/Tmt7G1k7hkxsJM5CXQXAd3Z5MDJF4FRJZm1GHnxBaGYI3W1GHk/R
      c6uXuclRNqr+a8ZRFuKbqatDoNcVRdO0w9c8GyBLDoHEaRxeRFMqlfC8i3dgUS6Xa10EcYEd
      BiCZ/Iqhsy6AxsbGYzXDNxEEwbceVS4MQ3T9mx85ftvXR3kftSjXpbmM8iTDZX/bN+4k68g+
      3uw6p91HXTWCz5vMmSUuTQ3wOl5lh7HpOQwrSWvaYGl1i+sDw+wsTRCke2iOueTy6ziBwfv3
      7tS6uOKcRKYGMO0UQ/03CXyfwq7Du/cGWVtepb29HdfzaGy9yo3OZlo6OmtdVHGOIhOA0Nll
      9MkSd+4MogIfz3VQuollWfsvUIpcfpueNulSjZLIBKBSKkPoMfs0x7XudiZn8lzvbeXJXI69
      zWVKjktrR9drZ48Xl0tdnQg7CTkRJk4jMjWAEK8iARCRJgEQkSYBEJEmARCRJgEQkSYBEJEm
      ARCRJgEQkfb/AfLbBk8LZDXFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Old / New SAT Compare' width='192'>
      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
      wxDhBwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Old SAT ACT BestWorst' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SAT Scores - 10 yr forecast' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SAT1 StateYear/Score' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SAT1 Statewide Changes' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SAT1YearByYear' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SAT2 StateYear/Score' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SAT2 Statewide Changes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SAT2 YearByYear' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total ACT Year by Year' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
